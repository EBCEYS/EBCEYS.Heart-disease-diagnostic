name: dockercompose6318684481998163191
services:
  alertstorageservice:
    build:
      context: F:\Project\HDDSystem
      dockerfile: AlertStorageService/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: AlertStorageService
    container_name: alertstorageservice
    depends_on:
      rabbitmq:
        condition: service_started
    entrypoint:
    - tail
    - -f
    - /dev/null
    image: alertstorageservice
    labels:
      com.microsoft.visual-studio.project-name: AlertStorageService
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/AlertStorageService.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    tty: true
    volumes:
    - type: bind
      source: C:\Users\Алексей\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Алексей\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net7.0
      target: /TokenService.Proxy
      read_only: true
      bind:
        create_host_path: true
  authservice:
    build:
      context: F:\Project\HDDSystem
      dockerfile: AuthService/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: AuthService
    container_name: authservice
    depends_on:
      rabbitmq:
        condition: service_started
      redis:
        condition: service_started
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    healthcheck:
      test:
      - CMD-SHELL
      - curl --fail http://localhost:5000/isAlive || exit 1
      timeout: 10s
      interval: 5s
      retries: 3
    image: authservice
    labels:
      com.microsoft.visual-studio.project-name: AuthService
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/AuthService.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 5000
      published: "5000"
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net7.0
      target: /TokenService.Proxy
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Алексей\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Алексей\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Алексей\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
  dbadapterservice:
    build:
      context: F:\Project\HDDSystem
      dockerfile: DBAdapterService/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: DBAdapterService
    container_name: dbadapterservice
    depends_on:
      rabbitmq:
        condition: service_started
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      DOTNET_ENVIRONMENT: Development
    image: dbadapterservice
    labels:
      com.microsoft.visual-studio.project-name: DBAdapterService
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/DBAdapterService.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    tty: true
    volumes:
    - type: bind
      source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net7.0
      target: /TokenService.Proxy
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Алексей\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Алексей\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
  definedataservice:
    build:
      context: F:\Project\HDDSystem
      dockerfile: DefineDataService/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: DefineDataService
    container_name: definedataservice
    depends_on:
      rabbitmq:
        condition: service_started
    entrypoint:
    - tail
    - -f
    - /dev/null
    image: definedataservice
    labels:
      com.microsoft.visual-studio.project-name: DefineDataService
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/DefineDataService.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    tty: true
    volumes:
    - type: bind
      source: C:\Users\Алексей\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Алексей\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net7.0
      target: /TokenService.Proxy
      read_only: true
      bind:
        create_host_path: true
  diagnosecardiovascularservice:
    build:
      context: F:\Project\HDDSystem
      dockerfile: DiagnoseCardiovascularService/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: DiagnoseCardiovascularService
    container_name: diagnosecardiovascularservice
    depends_on:
      rabbitmq:
        condition: service_started
    entrypoint:
    - tail
    - -f
    - /dev/null
    image: diagnosecardiovascularservice
    labels:
      com.microsoft.visual-studio.project-name: DiagnoseCardiovascularService
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/DiagnoseCardiovascularService.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    tty: true
    volumes:
    - type: bind
      source: C:\Users\Алексей\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Алексей\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net7.0
      target: /TokenService.Proxy
      read_only: true
      bind:
        create_host_path: true
  diagnosereceiver:
    build:
      context: F:\Project\HDDSystem
      dockerfile: DiagnoseReceiver/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: DiagnoseReceiver
    container_name: diagnosereceiver
    depends_on:
      rabbitmq:
        condition: service_started
    entrypoint:
    - tail
    - -f
    - /dev/null
    image: diagnosereceiver
    labels:
      com.microsoft.visual-studio.project-name: DiagnoseReceiver
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/DiagnoseReceiver.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
    - mode: ingress
      target: 1000
      published: "1000"
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Users\Алексей\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Алексей\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Алексей\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net7.0
      target: /TokenService.Proxy
      read_only: true
      bind:
        create_host_path: true
  diagnoserestservice:
    build:
      context: F:\Project\HDDSystem
      dockerfile: DiagnoseRESTService/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: DiagnoseRESTService
    container_name: diagnoserestservice
    depends_on:
      rabbitmq:
        condition: service_started
      redis:
        condition: service_started
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    image: diagnoserestservice
    labels:
      com.microsoft.visual-studio.project-name: DiagnoseRESTService
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/DiagnoseRESTService.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 80
      published: "80"
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net7.0
      target: /TokenService.Proxy
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Алексей\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Алексей\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Алексей\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
  jwtcachecheker:
    build:
      context: F:\Project\HDDSystem
      dockerfile: JwtCacheChecker/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: JwtCacheChecker
    container_name: jwt_cache_checker
    depends_on:
      rabbitmq:
        condition: service_started
      redis:
        condition: service_started
    entrypoint:
    - tail
    - -f
    - /dev/null
    image: jwtcachechecker
    labels:
      com.microsoft.visual-studio.project-name: JwtCacheChecker
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/JwtCacheChecker.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    tty: true
    volumes:
    - type: bind
      source: C:\Users\Алексей\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Алексей\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net7.0
      target: /TokenService.Proxy
      read_only: true
      bind:
        create_host_path: true
  pgadmin:
    container_name: DB_PGAdmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: secret
      PGADMIN_LISTEN_PORT: "80"
    image: dpage/pgadmin4:6.14
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "8080"
      protocol: tcp
    restart: always
    volumes:
    - type: volume
      source: pgadmin-data
      target: /var/lib/pgadmin
      volume: {}
  postgres:
    container_name: DB_PostgreSQL
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "4294967296"
    environment:
      POSTGRES_DB: DiagnoseResultsDB
      POSTGRES_PASSWORD: adm
      POSTGRES_USER: adm
    healthcheck:
      test:
      - CMD-SHELL
      - pg_isready -U adm -d DiagnoseResultsDB
      timeout: 5s
      interval: 10s
      retries: 5
      start_period: 10s
    image: postgres:13.3
    networks:
      default: null
    ports:
    - mode: ingress
      target: 5432
      published: "5432"
      protocol: tcp
    restart: unless-stopped
    volumes:
    - type: bind
      source: F:\Project\HDDSystem
      target: /docker-entrypoint-initdb.d
      bind:
        create_host_path: true
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.8-management-alpine
    networks:
      default: null
    ports:
    - mode: ingress
      target: 5672
      published: "5673"
      protocol: tcp
    - mode: ingress
      target: 15672
      published: "15673"
      protocol: tcp
  rabbitmqtohttploadbalancingservice:
    build:
      context: F:\Project\HDDSystem
      dockerfile: RabbitMQToHTTPLoadBalancingService/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: RabbitMQToHTTPLoadBalancingService
    container_name: rabbitmqtohttploadbalancingservice
    depends_on:
      rabbitmq:
        condition: service_started
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      DOTNET_ENVIRONMENT: Development
    image: rabbitmqtohttploadbalancingservice
    labels:
      com.microsoft.visual-studio.project-name: RabbitMQToHTTPLoadBalancingService
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/RabbitMQToHTTPLoadBalancingService.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    tty: true
    volumes:
    - type: bind
      source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net7.0
      target: /TokenService.Proxy
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Алексей\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Алексей\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
  redis:
    container_name: redis
    environment:
      REDIS_REPLICATION_MODE: master
    image: redis/redis-stack:latest
    networks:
      default: null
    ports:
    - mode: ingress
      target: 6379
      published: "6379"
      protocol: tcp
    - mode: ingress
      target: 8001
      published: "8001"
      protocol: tcp
    volumes:
    - type: bind
      source: F:\Project\HDDSystem\redis.conf
      target: /tmp/redis.conf
      bind:
        create_host_path: true
  usersdbadapter:
    build:
      context: F:\Project\HDDSystem
      dockerfile: UsersDBAdapter/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: UsersDBAdapter
    container_name: usersdbadapter
    depends_on:
      rabbitmq:
        condition: service_started
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      DOTNET_ENVIRONMENT: Development
    image: usersdbadapter
    labels:
      com.microsoft.visual-studio.project-name: UsersDBAdapter
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/UsersDBAdapter.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    tty: true
    volumes:
    - type: bind
      source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net7.0
      target: /TokenService.Proxy
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Алексей\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Алексей\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
networks:
  default:
    name: dockercompose6318684481998163191_default
volumes:
  pgadmin-data:
    name: dockercompose6318684481998163191_pgadmin-data